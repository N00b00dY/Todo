{{template "base" .}}

{{define "content"}}


<div class="container">
    <div class="row">
        <div class="col">
            <h3>Add to todo</h3>
            <div class="row">
                <div class="col">
                    <form method="post" action="/add-todo" class="" novalidate>
                        <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
                        <input class="form-control" id="add_todo" autocomplete="off" type="text"
                        name="add_todo" required> 
                    </form>
                </div>
            
                <div class="col">
                <a id="submitTodoBtn" class="btn btn-outline-secondary">Add todo </a>
                </div>
            </div>
            <div class="row">
                <div class="col">
                <ul>
                    {{range .TodList }}
                    <div class="form-check">
                    <div class="row">
                        <div class="col">
                            <input class="form-check-input" type="checkbox" value="{{.ID }}" id="flexCheckDefault" {{if eq .Active 1}} checked {{end}}>
                            <label class="form-check-label" for="flexCheckDefault">
                                {{ .Todo}}
                            </label>
                        </div>
                        <div class="col">
                            <button class="btn btn-outline-secondary btn-delete btn-sm" value="{{.ID }}" >
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                                </svg>
                            </button>

                            <button class="btn btn-outline-secondary btn-edit btn-sm" value="{{.ID }}">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
                                </svg>  
                            </button>
                        </div>
                        </div>
                      </div>
                    
                    {{end}}
                </ul>
            </div>      
            </div>
        </div>
    </div>


</div>
{{ end}}

{{ define "js"}}
<script>    
let submitTodoBtn = document.getElementById("submitTodoBtn") 
let checkTodo = document.getElementsByClassName("form-check-input")
let deleteTodo = document.getElementsByClassName("btn-delete")
let editTodo = document.getElementsByClassName("btn-edit")

Array.from(checkTodo).forEach((element) => {
    element.addEventListener("click", function () {
        const payload = {
            ID: parseInt(element.value),
        }

        const headers = new Headers()
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            body: JSON.stringify(payload),
            headers: headers,
        }
        fetch("http:\/\/localhost:8080/checkToDo", body)
        .then((response) => {
            response.json()
            
        })
        .catch((error) => {
           console.log("Error: " + error);
        })    
    })
});

Array.from(deleteTodo).forEach((element) => {
    element.addEventListener("click", function () {
        const payload = {
            ID: parseInt(element.value),
        }

        const headers = new Headers()
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            body: JSON.stringify(payload),
            headers: headers,
        }
        fetch("http:\/\/localhost:8080/delete-todo", body)
        .then((response) => {
            response.json()
            window.location.reload()
            
        })
        .catch((error) => {
           console.log("Error: " + error);
        })    
    })
});

Array.from(editTodo).forEach((element) => {
    element.addEventListener("click", function () {
        const payload = {
            ID: parseInt(element.value),
        }

        const headers = new Headers()
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            body: JSON.stringify(payload),
            headers: headers,
        }
        fetch("http:\/\/localhost:8080/edit-todo", body)
        .then((response) => {
            response.json()
            window.location.reload()
            
        })
        .catch((error) => {
           console.log("Error: " + error);
        })    
    })
});

submitTodoBtn.addEventListener("click", function(){


        let SubmitMessage = document.getElementById("add_todo").value
        console.log(SubmitMessage)

        const payload = {
            ID: 1,
            Todo: SubmitMessage,
        }

        const headers = new Headers()
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            body: JSON.stringify(payload),
            headers: headers,
        }
        fetch("http:\/\/localhost:8080/addToDo", body)
        .then((response) => {
            response.json()
            window.location.reload()
        })
        .catch((error) => {
            console.log("Error: " + error)
        })
        
    })
</script>
{{end}}